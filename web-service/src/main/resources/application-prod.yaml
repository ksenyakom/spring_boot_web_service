spring:
  datasource:
    url: jdbc:mysql://localhost:3306/gift_db_prod
    username: gift_user_prod
    password: gift_password_prod

#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: update
#      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 284761221522-k8udankvfnvmmkkhuukgagaii3fokco6.apps.googleusercontent.com
            clientSecret: AJobup9LL9myLmVfWvBR32FF
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:8080/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect